syntax = "proto3";

message PingRequest {
}

message PongResponse {
    string version = 1; // 系统版本
    int64 size = 2; // 存储空间大小
    int64 block = 3; // 允许最大块大小
}


message StorageCreateRequest {
    bytes info = 1; // 总HASH
    int64 size = 2; // 总大小
    string name = 3; // 文件名
}

message StorageStoreRequest {
    bytes info = 1; // 总HASH
    int64 index = 2; // 块索引
    bytes data = 3; // 存储的数据
    bytes hash = 4; // 数据HASH
}

message StorageFinishRequest {
    bytes info = 1; // 总HASH
}

message StorageResponse {
    enum Error {
        ERROR_NONE = 0; // 无错误
        ERROR_UNKNOWN = 1; // 未知错误
        ERROR_LACK_STORAGE = 2; // 存储空间不足
        ERROR_HASH = 3; // Hash长度错误
        ERROR_STORE = 5; // 储存失败
    }

    Error code = 1;
    string message = 2;
}

message GetResponse {
    bytes info = 1;
}

message DataBlock {
    bytes hash = 1;
    int64 index = 2; // 块索引
    bytes data = 3; // 内容
}

message DataResponse {
    enum Encode {
        NONE = 0;
        IMAGE = 1;
    }
    enum Type {
        STREAM = 0; // 比特流
        URI = 1; // 下载URI
    }
    bytes hash = 1; // 总HASH
    string name = 2; // 文件名
    int64 block = 3; // 块大小
    int64 size = 4; // 总大小
    Type type = 5; // 块类型
    Encode encode = 6; // 是否编码
    repeated DataBlock blocks = 7; // 数据块
}

service GoStorage {
    // 获取状态
    rpc Hello (PingRequest) returns (PongResponse) {
    }
    // 创建数据
    rpc Create (StorageCreateRequest) returns (StorageResponse) {
    }
    // 保存数据
    rpc Store (StorageStoreRequest) returns (StorageResponse) {
    }
    // 完成数据
    rpc Finish (StorageFinishRequest) returns (StorageResponse) {
    }
    // 获取数据
    rpc Get (GetResponse) returns (DataResponse) {
    }
}